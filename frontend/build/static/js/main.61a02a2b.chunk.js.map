{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","orderCreate","order","orderDetails","orderPay","orderDeliver","orderList","orders","orderListMy","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","className","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","Label","minWidth","disabled","length","review","createdAt","substring","productId","post","Group","controlId","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","addDecimals","num","Math","round","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","show","setShow","userToDelete","setUserToDelete","handleClose","successDelete","handleShow","Modal","onHide","closeButton","delete","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productToDelete","setProductToDelete","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","console","log","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.61a02a2b.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\nexport const CART_RESET = \"CART_RESET\";\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\n\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\n\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\n\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\n\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\n\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\n\n// Redux Thunk middleware allows you to write action creators that\n// return a function instead of an action.\n// The thunk can be used to delay the dispatch of an action,\n// or to dispatch only if a certain condition is met.\n// The inner function receives the store methods dispatch and getState as parameters.\nimport thunk from \"redux-thunk\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productCreateReviewReducer,\n  productTopRatedReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from \"./reducers/orderReducers\";\n\n// Too use redux dev tools you need:\n// 1. redux-devtools-extension in react app\n// 2. redux dev tools in chrome extension.\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productCreateReview: productCreateReviewReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderList: orderListReducer,\n  orderListMy: orderListMyReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n});\n\n// Fetch cart items from local storage\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\n// Fetch user info from local storage\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\n// Fetch user shipping address from local storage\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\n// Fetch user selected payment method from local storage\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\n  : \"\";\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_RESET,\n} from \"../constants/cartConstants\";\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      // x.product: the ID of the product\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === item.product ? item : x\n          ),\n        };\n      } else {\n        // If the item doesn't exist, simply add it to the state\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (item) => item.product !== action.payload\n        ),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    case CART_RESET:\n      return {\n        cartItems: [],\n        shippingAddress: {},\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LOGOUT,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_FAIL,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from \"../constants/userConstants.js\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (state = { loading: true }, action) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_LIST_MY_RESET:\n      return {\n        orders: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LOGOUT,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nimport { CART_RESET } from \"../constants/cartConstants\";\n\nimport axios from \"axios\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // Make login request\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    // After login success, save userInfo to local storage\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"shippingAddress\");\n\n  dispatch({ type: USER_LOGOUT });\n\n  // Reset/Clear user details state, cart items, shipping address and user orders state\n  dispatch({ type: CART_RESET });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n  dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // Make login request\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    // Login user automatically after register success\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    // After login success, save userInfo to local storage\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    // Get userInfo from state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Make get user details request\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\n\n    // Get userInfo from state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Make get user details request\n    const { data } = await axios.put(\"/api/users/profile\", user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LIST_REQUEST });\n\n    // Get userInfo from state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Make get user details request\n    const { data } = await axios.get(\"/api/users\", config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DELETE_REQUEST });\n\n    // Get userInfo from state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    // Get userInfo from state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n\n    // Also update the user details state\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        className=\"mr-sm-2 ml-sm-5\"\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Product...\"\n      ></Form.Control>\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from \"../actions/userActions\";\nimport SearchBox from \"./SearchBox\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  // Fetch user login state info\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Route render={({ history }) => <SearchBox history={history} />} />\n\n            {/* ml-auto: margin left auto: moves the Nav group to the right of the navbar */}\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Log Out\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          {/* py-3 means padding on y-axis with value 3 */}\n          <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"; // type impt to import proptypes\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      {/* if text exists, show it */}\n      <span>{text && text}</span>\n    </div>\n  );\n};\n\n// Set default color prop value\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Rating;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\" />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: \"info\",\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    ></Spinner>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n    </Helmet>\n  );\n};\n\nMeta.defaultProps = {\n  title: \"Welcome To ProShop\",\n  keywords: \"electronics, buy electronics, cheap electronics\",\n  description: \"We sell the best products for cheap\",\n};\n\nexport default Meta;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    );\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/products\", {}, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n    const { data } = await axios.get(\"/api/products/top\");\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../actions/productActions\";\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { loading, error, products } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel-caption\">\n              <h3>\n                {product.name} (${product.price})\n              </h3>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport Paginate from \"../components/Paginate\";\nimport Meta from \"../components/Meta\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport { listProducts } from \"../actions/productActions\";\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n  const pageNumber = match.params.pageNumber || 1;\n\n  //A hook to access the redux dispatch function.\n  const dispatch = useDispatch();\n  // Allows you to extract data from the Redux store state, using a selector function.\n  // The selector is approximately equivalent to the mapStateToProps argument\n  // to connect conceptually.\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Meta from \"../components/Meta\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productCreateReview = useSelector((state) => state.productCreateReview);\n  const {\n    error: errorProductReview,\n    success: successProductReview,\n  } = productCreateReview;\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert(\"Review Submitted!\");\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`); // redirect to cart\n  };\n\n  const reviewSubmitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col lg={6}>\n              {/* fluid property will keep the image inside its container without overflow */}\n              <Image src={product.image} alt={product.name} fluid></Image>\n            </Col>\n            <Col lg={3}>\n              {/* variant=\"flush\" will remove the border */}\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>{product.name}</h2>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  {product.rating && product.numReviews && (\n                    <Rating\n                      value={product.rating}\n                      text={`${product.numReviews} reviews`}\n                    />\n                  )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col lg={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>\n                          <Form.Label>Quantity:</Form.Label>\n                        </Col>\n                        <Col>\n                          <Form.Control\n                            style={{ minWidth: \"100px\" }}\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={reviewSubmitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"primary\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sign in</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from \"axios\";\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty: qty,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <>\n      <Row>\n        <h1>Shopping cart</h1>\n      </Row>\n      <Row>\n        <Col md={8}>\n          {cartItems.length === 0 ? (\n            <Message>\n              Your cart is empty <Link to=\"/\">Go Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant=\"flush\">\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={3}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col md={3}>\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>${item.price}</Col>\n                    <Col md={3}>\n                      <Form.Control\n                        style={{ minWidth: \"100px\" }}\n                        as=\"select\"\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={1}>\n                      <Button\n                        type=\"button\"\n                        variant=\"light\"\n                        onClick={() => removeFromCartHandler(item.product)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}\n                  ) items\n                </h2>\n                $\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cartItems.length === 0}\n                  onClick={checkoutHandler}\n                >\n                  Proceed To Checkout\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default CartScreen;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { login } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  // userLogin state\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  // parse redirect parameter if there's any\n  // e.g. when we click `continue to checkout` button:\n  // history.push(\"/login?redirect=shipping\");\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    // If userInfo data exists (user already logged in),\n    // redirect user to home page or to the specified redirect page (/login?redirect=shipping)\n    // same thing applies to register page\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // Dispatch LOGIN\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{\" \"}\n          <Link to={redirect ? `register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { register } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  // user register state\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // Check passwords matches\n    if (password !== confirmPassword) {\n      setMessage(\"Password do not match\");\n    } else {\n      // Dispatch REGISTER action\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        {/* NAME */}\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        {/* EMAIL */}\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        {/* PASSWORD  */}\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        {/* CONFIRM PASSWORD  */}\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an account?{\" \"}\n          <Link to={redirect ? `login?redirect=${redirect}` : \"/login\"}>\n            Log In\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  // Get user details state\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  // Check if user is logged in\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // Get user update profile state - to see if the update succeeded\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  // Get logged in user's orders state\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      // if user login state is empty\n      history.push(\"/login\");\n    } else {\n      // if user details state is empty\n      if (!user.name) {\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [user, history, userInfo, dispatch]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // Check passwords matches\n    if (password !== confirmPassword) {\n      setMessage(\"Password do not match\");\n    } else {\n      // Dispatch UPDATE PROFILE action\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h3>User Profile</h3>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          {/* NAME */}\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          {/* EMAIL */}\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          {/* PASSWORD  */}\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          {/* CONFIRM PASSWORD  */}\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h3>My Orders</h3>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n} from \"../constants/orderConstants\";\nimport { CART_RESET } from \"../constants/cartConstants\";\n\nimport axios from \"axios\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_CREATE_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Make create new order request\n    const { data } = await axios.post(\"/api/orders\", order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Fetch order by order id\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: ORDER_PAY_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Fetch order by order id\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n\n    // Clear out the cart once the payment is successful\n    dispatch({\n      type: CART_RESET,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DELIVER_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Fetch order by order id\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_MY_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Fetch logged in user's orders\n    const { data } = await axios.get(\"/api/orders/myorders\", config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST });\n\n    // Get userInfo data from userLogin state\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // Add authorization token from userInfo.token\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Fetch logged in user's orders\n    const { data } = await axios.get(\"/api/orders\", config);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payments</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payments</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n\n    // Move to payment page\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h2>Shipping</h2>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address || \"\"}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city || \"\"}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode || \"\"}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country || \"\"}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    // If no shipping address found\n    history.push(\"/shipping\");\n  }\n\n  // Default payment method: paypal\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n\n    // Move to placeorder page\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h2>Payment Method</h2>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n\n            <Form.Check\n              type=\"radio\"\n              label=\"Stripe\"\n              id=\"Stripe\"\n              name=\"paymentMethod\"\n              value=\"Stripe\"\n              disabled\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport Message from \"../components/Message\";\nimport { createOrder } from \"../actions/orderActions\";\n\n// Helper func to always add two decimals at the end\n// Takes in a number and returns a string\nconst addDecimals = (num) => {\n  return (Math.round(num * 100) / 100).toFixed(2);\n};\n\nconst PlaceOrderScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n\n  const dispatch = useDispatch();\n\n  // Calculate prices\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n  // set a dummy shipping price\n  cart.shippingPrice = addDecimals(\n    cart.cartItems.length === 0 || cart.itemsPrice > 100 ? 0 : 10\n  );\n  cart.taxPrice = addDecimals(0.13 * Number(cart.itemsPrice));\n\n  cart.totalPrice = addDecimals(\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\n  );\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    // dispatch CREATE ORDER REQUEST action\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h3>Shipping</h3>\n              <p>\n                <strong>Address: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                {cart.shippingAddress.postalCode},{\" \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h3>Payment Method</h3>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h3>Order Items</h3>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item) => (\n                    // use item.product (Id of the item) as the key\n                    <ListGroup.Item key={item.product}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>Order Summary</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants//orderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    // Func to add the PayPal JavaScript SDK Script\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    // 1. if order is not there - dispatch getOrderDetails action\n    // 2. if order._id !== orderId i.e. user is checking a different order,\n    // dispatch getOrderDetails action\n    // 3. if the payment has just been successfully made, i.e. successPay == true\n    // also dispatch getOrderDetails action to fetch the updated order details\n    if (!order || order._id !== orderId || successPay || successDeliver) {\n      // dispatch({ type: ORDER_PAY_RESET }) to reset/clear the orderPay state\n      // so that succesPay will be null to avoid constantly dispatch(getOrderDetails(orderId));\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver, userInfo, history]);\n\n  // Func to handle success PayPal payment\n  const successPaymentHandler = (paymentResult) => {\n    // On payment success:\n    // Dispatch payOrder action to update the order status from unpaid to paid\n    // (both in database and orderPay state)\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h2>Order {order._id}</h2>\n\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h3>Shipping</h3>\n              <p>\n                <strong>Name: </strong>\n                {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"info\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h3>Payment Method</h3>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"info\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h3>Order Items</h3>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item) => (\n                    // use item.product (Id of the item) as the key\n                    <ListGroup.Item key={item.product}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card style={{ minWidth: \"250px\" }}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>Order Summary</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Modal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\nconst UserListScreen = ({ history }) => {\n  const [show, setShow] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n\n  const handleClose = () => {\n    setShow(false);\n    setUserToDelete(null);\n  };\n\n  const handleShow = (user) => {\n    setUserToDelete(user);\n    setShow(true);\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteUser(userToDelete._id));\n    handleClose();\n  };\n\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n    // add successDelete to the dependency - reload the user list once the delete is successful\n  }, [dispatch, history, userInfo, successDelete]);\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => handleShow(user)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n\n      {userToDelete && (\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirm your action</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure to delete user {userToDelete.name}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, history, successUpdate, user, userId]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit User</h1>\n\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Modal, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport Paginate from \"../components/Paginate\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n\n  const [show, setShow] = useState(false);\n  const [productToDelete, setProductToDelete] = useState(null);\n\n  const handleClose = () => {\n    setShow(false);\n    setProductToDelete(null);\n  };\n\n  const handleShow = (product) => {\n    setProductToDelete(product);\n    setShow(true);\n  };\n\n  const handleDelete = () => {\n    // Delete Product\n    dispatch(deleteProduct(productToDelete._id));\n    handleClose();\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(\"\", pageNumber));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ]);\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => handleShow(product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n\n      {productToDelete && (\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirm your action</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure to delete product {productToDelete.name}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, product, productId, successUpdate]);\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose File\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter count in stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listOrders } from \"../actions/orderActions\";\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n    // add successDelete to the dependency - reload the user list once the delete is successful\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"; // with history api integrated\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n          />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}